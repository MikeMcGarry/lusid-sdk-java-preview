/*
 * LUSID API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1386
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.lusid.api;

import com.finbourne.lusid.ApiException;
import com.finbourne.lusid.model.InlineValuationsReconciliationRequest;
import com.finbourne.lusid.model.LusidProblemDetails;
import com.finbourne.lusid.model.LusidValidationProblemDetails;
import com.finbourne.lusid.model.PortfoliosReconciliationRequest;
import com.finbourne.lusid.model.PortfoliosReconciliationRequestPreview;
import com.finbourne.lusid.model.ResourceListOfReconciliationBreak;
import com.finbourne.lusid.model.ValuationsReconciliationRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReconciliationsApi
 */
@Ignore
public class ReconciliationsApiTest {

    private final ReconciliationsApi api = new ReconciliationsApi();

    
    /**
     * [EARLY ACCESS] Reconcile portfolio holdings
     *
     * Reconcile the holdings of two portfolios.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void reconcileHoldingsTest() throws ApiException {
        List<String> sortBy = null;
        Integer start = null;
        Integer limit = null;
        String filter = null;
        PortfoliosReconciliationRequest request = null;
        ResourceListOfReconciliationBreak response = api.reconcileHoldings(sortBy, start, limit, filter, request);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] Reconcile portfolio holdings with given tolerance
     *
     * Reconcile the holdings of two portfolios.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void reconcileHoldingsPreviewTest() throws ApiException {
        List<String> sortBy = null;
        Integer start = null;
        Integer limit = null;
        String filter = null;
        PortfoliosReconciliationRequestPreview request = null;
        ResourceListOfReconciliationBreak response = api.reconcileHoldingsPreview(sortBy, start, limit, filter, request);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] Reconcile valuations performed on one or two sets of inline instruments using one or two configuration recipes.
     *
     * Perform valuation of one or two set of inline instruments using different one or two configuration recipes. Produce a breakdown of the resulting differences in valuation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void reconcileInlineTest() throws ApiException {
        List<String> sortBy = null;
        Integer start = null;
        Integer limit = null;
        String filter = null;
        InlineValuationsReconciliationRequest request = null;
        ResourceListOfReconciliationBreak response = api.reconcileInline(sortBy, start, limit, filter, request);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] Reconcile valuations performed on one or two sets of holdings using one or two configuration recipes.
     *
     * Perform valuation of one or two set of holdings using different one or two configuration recipes. Produce a breakdown of the resulting differences in valuation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void reconcileValuationTest() throws ApiException {
        List<String> sortBy = null;
        Integer start = null;
        Integer limit = null;
        String filter = null;
        ValuationsReconciliationRequest request = null;
        ResourceListOfReconciliationBreak response = api.reconcileValuation(sortBy, start, limit, filter, request);

        // TODO: test validations
    }
    
}
