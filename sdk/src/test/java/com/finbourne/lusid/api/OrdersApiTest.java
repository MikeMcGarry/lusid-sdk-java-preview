/*
 * LUSID API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1388
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.lusid.api;

import com.finbourne.lusid.ApiException;
import com.finbourne.lusid.model.LusidProblemDetails;
import com.finbourne.lusid.model.LusidValidationProblemDetails;
import java.time.OffsetDateTime;
import com.finbourne.lusid.model.Order;
import com.finbourne.lusid.model.OrderSetRequest;
import com.finbourne.lusid.model.PagedResourceListOfOrder;
import com.finbourne.lusid.model.ResourceListOfOrder;
import com.finbourne.lusid.model.UpsertOrderPropertiesRequest;
import com.finbourne.lusid.model.UpsertOrderPropertiesResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrdersApi
 */
@Ignore
public class OrdersApiTest {

    private final OrdersApi api = new OrdersApi();

    
    /**
     * [EXPERIMENTAL] Fetch a given order.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOrderTest() throws ApiException {
        String scope = null;
        String code = null;
        OffsetDateTime asAt = null;
        List<String> propertyKeys = null;
        Order response = api.getOrder(scope, code, asAt, propertyKeys);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] Fetch the last pre-AsAt date version of each order in scope (does not fetch the entire history).
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listOrdersTest() throws ApiException {
        OffsetDateTime asAt = null;
        String page = null;
        List<String> sortBy = null;
        Integer start = null;
        Integer limit = null;
        String filter = null;
        List<String> propertyKeys = null;
        PagedResourceListOfOrder response = api.listOrders(asAt, page, sortBy, start, limit, filter, propertyKeys);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] Upsert; update properties on existing Orders with given ids.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void upsertOrderPropertiesTest() throws ApiException {
        String scope = null;
        List<UpsertOrderPropertiesRequest> request = null;
        UpsertOrderPropertiesResponse response = api.upsertOrderProperties(scope, request);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] Upsert; update existing orders with given ids, or create new orders otherwise.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void upsertOrdersTest() throws ApiException {
        OrderSetRequest request = null;
        ResourceListOfOrder response = api.upsertOrders(request);

        // TODO: test validations
    }
    
}
