/*
 * LUSID API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1390
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.lusid.api;

import com.finbourne.lusid.ApiException;
import com.finbourne.lusid.model.LusidProblemDetails;
import com.finbourne.lusid.model.LusidValidationProblemDetails;
import java.time.OffsetDateTime;
import com.finbourne.lusid.model.PropertySchema;
import com.finbourne.lusid.model.ResourceListOfString;
import com.finbourne.lusid.model.ResourceListOfValueType;
import com.finbourne.lusid.model.Schema;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SchemasApi
 */
@Ignore
public class SchemasApiTest {

    private final SchemasApi api = new SchemasApi();

    
    /**
     * [BETA] Get schema
     *
     * Gets the schema and meta-data for a given entity
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEntitySchemaTest() throws ApiException {
        String entity = null;
        Schema response = api.getEntitySchema(entity);

        // TODO: test validations
    }
    
    /**
     * [BETA] Get property schema
     *
     * Get the schemas for the provided list of property keys.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPropertySchemaTest() throws ApiException {
        List<String> propertyKeys = null;
        OffsetDateTime asAt = null;
        PropertySchema response = api.getPropertySchema(propertyKeys, asAt);

        // TODO: test validations
    }
    
    /**
     * [BETA] Get value types
     *
     * Gets the available value types for which a schema is available.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getValueTypesTest() throws ApiException {
        List<String> sortBy = null;
        Integer start = null;
        Integer limit = null;
        ResourceListOfValueType response = api.getValueTypes(sortBy, start, limit);

        // TODO: test validations
    }
    
    /**
     * [BETA] List entities
     *
     * List all available entities for which schema information is available.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listEntitiesTest() throws ApiException {
        ResourceListOfString response = api.listEntities();

        // TODO: test validations
    }
    
}
