/*
 * LUSID API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1387
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.lusid.model;

import java.util.Objects;
import java.util.Arrays;
import com.finbourne.lusid.model.AggregateSpec;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * AggregationResponseNodeOfDictionaryOfStringToObject
 */

public class AggregationResponseNodeOfDictionaryOfStringToObject {
  public static final String SERIALIZED_NAME_KEY = "key";
  @SerializedName(SERIALIZED_NAME_KEY)
  private AggregateSpec key = null;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private String value;

  public static final String SERIALIZED_NAME_DEPTH = "depth";
  @SerializedName(SERIALIZED_NAME_DEPTH)
  private Integer depth;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private Map<String, Object> properties = new HashMap<>();

  public static final String SERIALIZED_NAME_CHILDREN = "children";
  @SerializedName(SERIALIZED_NAME_CHILDREN)
  private List<AggregationResponseNodeOfDictionaryOfStringToObject> children = new ArrayList<>();

  public AggregationResponseNodeOfDictionaryOfStringToObject key(AggregateSpec key) {
    this.key = key;
    return this;
  }

   /**
   * Get key
   * @return key
  **/
  @ApiModelProperty(value = "")
  public AggregateSpec getKey() {
    return key;
  }

  public void setKey(AggregateSpec key) {
    this.key = key;
  }

  public AggregationResponseNodeOfDictionaryOfStringToObject value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @ApiModelProperty(value = "")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public AggregationResponseNodeOfDictionaryOfStringToObject depth(Integer depth) {
    this.depth = depth;
    return this;
  }

   /**
   * Get depth
   * @return depth
  **/
  @ApiModelProperty(value = "")
  public Integer getDepth() {
    return depth;
  }

  public void setDepth(Integer depth) {
    this.depth = depth;
  }

  public AggregationResponseNodeOfDictionaryOfStringToObject properties(Map<String, Object> properties) {
    this.properties = properties;
    return this;
  }

  public AggregationResponseNodeOfDictionaryOfStringToObject putPropertiesItem(String key, Object propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getProperties() {
    return properties;
  }

  public void setProperties(Map<String, Object> properties) {
    this.properties = properties;
  }

  public AggregationResponseNodeOfDictionaryOfStringToObject children(List<AggregationResponseNodeOfDictionaryOfStringToObject> children) {
    this.children = children;
    return this;
  }

  public AggregationResponseNodeOfDictionaryOfStringToObject addChildrenItem(AggregationResponseNodeOfDictionaryOfStringToObject childrenItem) {
    if (this.children == null) {
      this.children = new ArrayList<>();
    }
    this.children.add(childrenItem);
    return this;
  }

   /**
   * Get children
   * @return children
  **/
  @ApiModelProperty(value = "")
  public List<AggregationResponseNodeOfDictionaryOfStringToObject> getChildren() {
    return children;
  }

  public void setChildren(List<AggregationResponseNodeOfDictionaryOfStringToObject> children) {
    this.children = children;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AggregationResponseNodeOfDictionaryOfStringToObject aggregationResponseNodeOfDictionaryOfStringToObject = (AggregationResponseNodeOfDictionaryOfStringToObject) o;
    return Objects.equals(this.key, aggregationResponseNodeOfDictionaryOfStringToObject.key) &&
        Objects.equals(this.value, aggregationResponseNodeOfDictionaryOfStringToObject.value) &&
        Objects.equals(this.depth, aggregationResponseNodeOfDictionaryOfStringToObject.depth) &&
        Objects.equals(this.properties, aggregationResponseNodeOfDictionaryOfStringToObject.properties) &&
        Objects.equals(this.children, aggregationResponseNodeOfDictionaryOfStringToObject.children);
  }

  @Override
  public int hashCode() {
    return Objects.hash(key, value, depth, properties, children);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AggregationResponseNodeOfDictionaryOfStringToObject {\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    depth: ").append(toIndentedString(depth)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
