/*
 * LUSID API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1380
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.lusid.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * CreateResults
 */

public class CreateResults {
  public static final String SERIALIZED_NAME_EFFECTIVE_AT = "effectiveAt";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_AT)
  private OffsetDateTime effectiveAt;

  public static final String SERIALIZED_NAME_ENTITY_SCOPE = "entityScope";
  @SerializedName(SERIALIZED_NAME_ENTITY_SCOPE)
  private String entityScope;

  public static final String SERIALIZED_NAME_ENTITY_CODE = "entityCode";
  @SerializedName(SERIALIZED_NAME_ENTITY_CODE)
  private String entityCode;

  public static final String SERIALIZED_NAME_CALCULATION_SCOPE = "calculationScope";
  @SerializedName(SERIALIZED_NAME_CALCULATION_SCOPE)
  private String calculationScope;

  public static final String SERIALIZED_NAME_CALCULATION_CODE = "calculationCode";
  @SerializedName(SERIALIZED_NAME_CALCULATION_CODE)
  private String calculationCode;

  /**
   * The format in which the results are stored/structured.
   */
  @JsonAdapter(FormatEnum.Adapter.class)
  public enum FormatEnum {
    DATAREADER("DataReader"),
    
    PORTFOLIO("Portfolio"),
    
    UNKNOWN("Unknown");

    private String value;

    FormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FormatEnum fromValue(String value) {
      for (FormatEnum b : FormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FormatEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FormatEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return FormatEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_FORMAT = "format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private FormatEnum format;

  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private String data;

  public CreateResults effectiveAt(OffsetDateTime effectiveAt) {
    this.effectiveAt = effectiveAt;
    return this;
  }

   /**
   * The effective market date for which results are calculated and are to be stored.
   * @return effectiveAt
  **/
  @ApiModelProperty(required = true, value = "The effective market date for which results are calculated and are to be stored.")
  public OffsetDateTime getEffectiveAt() {
    return effectiveAt;
  }

  public void setEffectiveAt(OffsetDateTime effectiveAt) {
    this.effectiveAt = effectiveAt;
  }

  public CreateResults entityScope(String entityScope) {
    this.entityScope = entityScope;
    return this;
  }

   /**
   * Scope of the entity code
   * @return entityScope
  **/
  @ApiModelProperty(required = true, value = "Scope of the entity code")
  public String getEntityScope() {
    return entityScope;
  }

  public void setEntityScope(String entityScope) {
    this.entityScope = entityScope;
  }

  public CreateResults entityCode(String entityCode) {
    this.entityCode = entityCode;
    return this;
  }

   /**
   * The code of the entity for which the data has been calculated.
   * @return entityCode
  **/
  @ApiModelProperty(required = true, value = "The code of the entity for which the data has been calculated.")
  public String getEntityCode() {
    return entityCode;
  }

  public void setEntityCode(String entityCode) {
    this.entityCode = entityCode;
  }

  public CreateResults calculationScope(String calculationScope) {
    this.calculationScope = calculationScope;
    return this;
  }

   /**
   * Scope of the calculation code.
   * @return calculationScope
  **/
  @ApiModelProperty(required = true, value = "Scope of the calculation code.")
  public String getCalculationScope() {
    return calculationScope;
  }

  public void setCalculationScope(String calculationScope) {
    this.calculationScope = calculationScope;
  }

  public CreateResults calculationCode(String calculationCode) {
    this.calculationCode = calculationCode;
    return this;
  }

   /**
   * This is the identifier which denotes some hash of, or recipe, that cumulatively represents the configuration through which  the results being stored are obtained. For example, the recipe denotes the pricing model, the market data and any other  settings. If the results were calculated externally it should be some repeatable hash or other Id that denotes the particular  configuration under which those results were obtained.
   * @return calculationCode
  **/
  @ApiModelProperty(required = true, value = "This is the identifier which denotes some hash of, or recipe, that cumulatively represents the configuration through which  the results being stored are obtained. For example, the recipe denotes the pricing model, the market data and any other  settings. If the results were calculated externally it should be some repeatable hash or other Id that denotes the particular  configuration under which those results were obtained.")
  public String getCalculationCode() {
    return calculationCode;
  }

  public void setCalculationCode(String calculationCode) {
    this.calculationCode = calculationCode;
  }

  public CreateResults format(FormatEnum format) {
    this.format = format;
    return this;
  }

   /**
   * The format in which the results are stored/structured.
   * @return format
  **/
  @ApiModelProperty(value = "The format in which the results are stored/structured.")
  public FormatEnum getFormat() {
    return format;
  }

  public void setFormat(FormatEnum format) {
    this.format = format;
  }

  public CreateResults data(String data) {
    this.data = data;
    return this;
  }

   /**
   * The data that should be stored in the results cube.
   * @return data
  **/
  @ApiModelProperty(value = "The data that should be stored in the results cube.")
  public String getData() {
    return data;
  }

  public void setData(String data) {
    this.data = data;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateResults createResults = (CreateResults) o;
    return Objects.equals(this.effectiveAt, createResults.effectiveAt) &&
        Objects.equals(this.entityScope, createResults.entityScope) &&
        Objects.equals(this.entityCode, createResults.entityCode) &&
        Objects.equals(this.calculationScope, createResults.calculationScope) &&
        Objects.equals(this.calculationCode, createResults.calculationCode) &&
        Objects.equals(this.format, createResults.format) &&
        Objects.equals(this.data, createResults.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(effectiveAt, entityScope, entityCode, calculationScope, calculationCode, format, data);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateResults {\n");
    sb.append("    effectiveAt: ").append(toIndentedString(effectiveAt)).append("\n");
    sb.append("    entityScope: ").append(toIndentedString(entityScope)).append("\n");
    sb.append("    entityCode: ").append(toIndentedString(entityCode)).append("\n");
    sb.append("    calculationScope: ").append(toIndentedString(calculationScope)).append("\n");
    sb.append("    calculationCode: ").append(toIndentedString(calculationCode)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
