/*
 * LUSID API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1390
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.lusid.model;

import java.util.Objects;
import java.util.Arrays;
import com.finbourne.lusid.model.EquityOptionAllOf;
import com.finbourne.lusid.model.LusidInstrument;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * Lusid-ibor DTO representation of a plain vanilla option instrument.
 */
@ApiModel(description = "Lusid-ibor DTO representation of a plain vanilla option instrument.")

public class EquityOption extends LusidInstrument {
  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_OPTION_MATURITY_DATE = "optionMaturityDate";
  @SerializedName(SERIALIZED_NAME_OPTION_MATURITY_DATE)
  private OffsetDateTime optionMaturityDate;

  public static final String SERIALIZED_NAME_OPTION_SETTLEMENT_DATE = "optionSettlementDate";
  @SerializedName(SERIALIZED_NAME_OPTION_SETTLEMENT_DATE)
  private OffsetDateTime optionSettlementDate;

  public static final String SERIALIZED_NAME_IS_DELIVERY_NOT_CASH = "isDeliveryNotCash";
  @SerializedName(SERIALIZED_NAME_IS_DELIVERY_NOT_CASH)
  private Boolean isDeliveryNotCash;

  public static final String SERIALIZED_NAME_IS_CALL_NOT_PUT = "isCallNotPut";
  @SerializedName(SERIALIZED_NAME_IS_CALL_NOT_PUT)
  private Boolean isCallNotPut;

  public static final String SERIALIZED_NAME_STRIKE = "strike";
  @SerializedName(SERIALIZED_NAME_STRIKE)
  private Double strike;

  public static final String SERIALIZED_NAME_DOM_CCY = "domCcy";
  @SerializedName(SERIALIZED_NAME_DOM_CCY)
  private String domCcy;

  public EquityOption code(String code) {
    this.code = code;
    return this;
  }

   /**
   * The reset code of the option.
   * @return code
  **/
  @ApiModelProperty(required = true, value = "The reset code of the option.")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public EquityOption startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * The start date of the option.
   * @return startDate
  **/
  @ApiModelProperty(required = true, value = "The start date of the option.")
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }

  public EquityOption optionMaturityDate(OffsetDateTime optionMaturityDate) {
    this.optionMaturityDate = optionMaturityDate;
    return this;
  }

   /**
   * The maturity date of the option.
   * @return optionMaturityDate
  **/
  @ApiModelProperty(required = true, value = "The maturity date of the option.")
  public OffsetDateTime getOptionMaturityDate() {
    return optionMaturityDate;
  }

  public void setOptionMaturityDate(OffsetDateTime optionMaturityDate) {
    this.optionMaturityDate = optionMaturityDate;
  }

  public EquityOption optionSettlementDate(OffsetDateTime optionSettlementDate) {
    this.optionSettlementDate = optionSettlementDate;
    return this;
  }

   /**
   * The settlement date of the option.
   * @return optionSettlementDate
  **/
  @ApiModelProperty(required = true, value = "The settlement date of the option.")
  public OffsetDateTime getOptionSettlementDate() {
    return optionSettlementDate;
  }

  public void setOptionSettlementDate(OffsetDateTime optionSettlementDate) {
    this.optionSettlementDate = optionSettlementDate;
  }

  public EquityOption isDeliveryNotCash(Boolean isDeliveryNotCash) {
    this.isDeliveryNotCash = isDeliveryNotCash;
    return this;
  }

   /**
   * True of the option is settled in cash false if delivery.
   * @return isDeliveryNotCash
  **/
  @ApiModelProperty(required = true, value = "True of the option is settled in cash false if delivery.")
  public Boolean getIsDeliveryNotCash() {
    return isDeliveryNotCash;
  }

  public void setIsDeliveryNotCash(Boolean isDeliveryNotCash) {
    this.isDeliveryNotCash = isDeliveryNotCash;
  }

  public EquityOption isCallNotPut(Boolean isCallNotPut) {
    this.isCallNotPut = isCallNotPut;
    return this;
  }

   /**
   * True if the option is a call, false if the option is a put.
   * @return isCallNotPut
  **/
  @ApiModelProperty(required = true, value = "True if the option is a call, false if the option is a put.")
  public Boolean getIsCallNotPut() {
    return isCallNotPut;
  }

  public void setIsCallNotPut(Boolean isCallNotPut) {
    this.isCallNotPut = isCallNotPut;
  }

  public EquityOption strike(Double strike) {
    this.strike = strike;
    return this;
  }

   /**
   * The strike of the option.
   * @return strike
  **/
  @ApiModelProperty(required = true, value = "The strike of the option.")
  public Double getStrike() {
    return strike;
  }

  public void setStrike(Double strike) {
    this.strike = strike;
  }

  public EquityOption domCcy(String domCcy) {
    this.domCcy = domCcy;
    return this;
  }

   /**
   * The domestic currency.
   * @return domCcy
  **/
  @ApiModelProperty(required = true, value = "The domestic currency.")
  public String getDomCcy() {
    return domCcy;
  }

  public void setDomCcy(String domCcy) {
    this.domCcy = domCcy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EquityOption equityOption = (EquityOption) o;
    return Objects.equals(this.code, equityOption.code) &&
        Objects.equals(this.startDate, equityOption.startDate) &&
        Objects.equals(this.optionMaturityDate, equityOption.optionMaturityDate) &&
        Objects.equals(this.optionSettlementDate, equityOption.optionSettlementDate) &&
        Objects.equals(this.isDeliveryNotCash, equityOption.isDeliveryNotCash) &&
        Objects.equals(this.isCallNotPut, equityOption.isCallNotPut) &&
        Objects.equals(this.strike, equityOption.strike) &&
        Objects.equals(this.domCcy, equityOption.domCcy) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, startDate, optionMaturityDate, optionSettlementDate, isDeliveryNotCash, isCallNotPut, strike, domCcy, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EquityOption {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    optionMaturityDate: ").append(toIndentedString(optionMaturityDate)).append("\n");
    sb.append("    optionSettlementDate: ").append(toIndentedString(optionSettlementDate)).append("\n");
    sb.append("    isDeliveryNotCash: ").append(toIndentedString(isDeliveryNotCash)).append("\n");
    sb.append("    isCallNotPut: ").append(toIndentedString(isCallNotPut)).append("\n");
    sb.append("    strike: ").append(toIndentedString(strike)).append("\n");
    sb.append("    domCcy: ").append(toIndentedString(domCcy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
