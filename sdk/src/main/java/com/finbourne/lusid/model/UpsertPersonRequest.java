/*
 * LUSID API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1389
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.lusid.model;

import java.util.Objects;
import java.util.Arrays;
import com.finbourne.lusid.model.Property;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * UpsertPersonRequest
 */

public class UpsertPersonRequest {
  public static final String SERIALIZED_NAME_IDENTIFIERS = "identifiers";
  @SerializedName(SERIALIZED_NAME_IDENTIFIERS)
  private Map<String, Property> identifiers = new HashMap<>();

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private Map<String, List<Property>> properties = new HashMap<>();

  public UpsertPersonRequest identifiers(Map<String, Property> identifiers) {
    this.identifiers = identifiers;
    return this;
  }

  public UpsertPersonRequest putIdentifiersItem(String key, Property identifiersItem) {
    if (this.identifiers == null) {
      this.identifiers = new HashMap<>();
    }
    this.identifiers.put(key, identifiersItem);
    return this;
  }

   /**
   * The identifiers the person will be created with.
   * @return identifiers
  **/
  @ApiModelProperty(value = "The identifiers the person will be created with.")
  public Map<String, Property> getIdentifiers() {
    return identifiers;
  }

  public void setIdentifiers(Map<String, Property> identifiers) {
    this.identifiers = identifiers;
  }

  public UpsertPersonRequest properties(Map<String, List<Property>> properties) {
    this.properties = properties;
    return this;
  }

  public UpsertPersonRequest putPropertiesItem(String key, List<Property> propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * A set of properties associated to the Person. There can be multiple properties associated with a property key.
   * @return properties
  **/
  @ApiModelProperty(value = "A set of properties associated to the Person. There can be multiple properties associated with a property key.")
  public Map<String, List<Property>> getProperties() {
    return properties;
  }

  public void setProperties(Map<String, List<Property>> properties) {
    this.properties = properties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpsertPersonRequest upsertPersonRequest = (UpsertPersonRequest) o;
    return Objects.equals(this.identifiers, upsertPersonRequest.identifiers) &&
        Objects.equals(this.properties, upsertPersonRequest.properties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identifiers, properties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpsertPersonRequest {\n");
    sb.append("    identifiers: ").append(toIndentedString(identifiers)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
