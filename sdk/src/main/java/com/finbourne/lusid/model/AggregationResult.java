/*
 * LUSID API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1389
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.lusid.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * AggregationResult
 */

public class AggregationResult {
  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_SCALES_WITH_HOLDING_QUANTITY = "scalesWithHoldingQuantity";
  @SerializedName(SERIALIZED_NAME_SCALES_WITH_HOLDING_QUANTITY)
  private Boolean scalesWithHoldingQuantity;

  /**
   * Gets or Sets valueType
   */
  @JsonAdapter(ValueTypeEnum.Adapter.class)
  public enum ValueTypeEnum {
    STRING("String"),
    
    INT("Int"),
    
    DECIMAL("Decimal"),
    
    DATETIME("DateTime"),
    
    BOOLEAN("Boolean"),
    
    MAP("Map"),
    
    LIST("List"),
    
    PROPERTYARRAY("PropertyArray"),
    
    PERCENTAGE("Percentage"),
    
    BENCHMARKTYPE("BenchmarkType"),
    
    CODE("Code"),
    
    ID("Id"),
    
    URI("Uri"),
    
    ARRAYOFIDS("ArrayOfIds"),
    
    ARRAYOFTRANSACTIONALIASES("ArrayOfTransactionAliases"),
    
    ARRAYOFTRANSACTIONMOVEMENTS("ArrayofTransactionMovements"),
    
    ARRAYOFUNITS("ArrayofUnits"),
    
    STRINGARRAY("StringArray"),
    
    CURRENCYANDAMOUNT("CurrencyAndAmount"),
    
    TRADEPRICE("TradePrice"),
    
    UNITCREATION("UnitCreation"),
    
    CURRENCY("Currency"),
    
    USERID("UserId"),
    
    METRICVALUE("MetricValue"),
    
    QUOTEID("QuoteId"),
    
    QUOTESERIESID("QuoteSeriesId"),
    
    RESOURCEID("ResourceId"),
    
    RESULTVALUE("ResultValue"),
    
    CUTLOCALTIME("CutLocalTime"),
    
    DATEORCUTLABEL("DateOrCutLabel"),
    
    TRANSITION("Transition"),
    
    STRUCTUREDDATA("StructuredData"),
    
    STRUCTUREDDATAID("StructuredDataId"),
    
    CONFIGURATIONRECIPE("ConfigurationRecipe"),
    
    CONFIGURATIONRECIPESNIPPET("ConfigurationRecipeSnippet"),
    
    STRUCTUREDRESULTDATAID("StructuredResultDataId"),
    
    STRUCTUREDRESULTDATA("StructuredResultData"),
    
    DATAMAPPING("DataMapping"),
    
    LUSIDINSTRUMENT("LusidInstrument"),
    
    WEIGHTEDINSTRUMENT("WeightedInstrument"),
    
    TENOR("Tenor"),
    
    CDSDETAILSPECIFICATIONS("CdsDetailSpecifications"),
    
    FLOWCONVENTIONS("FlowConventions"),
    
    ORDERID("OrderId");

    private String value;

    ValueTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ValueTypeEnum fromValue(String value) {
      for (ValueTypeEnum b : ValueTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ValueTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ValueTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ValueTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ValueTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_VALUE_TYPE = "valueType";
  @SerializedName(SERIALIZED_NAME_VALUE_TYPE)
  private ValueTypeEnum valueType;

  public AggregationResult displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @ApiModelProperty(value = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public AggregationResult scalesWithHoldingQuantity(Boolean scalesWithHoldingQuantity) {
    this.scalesWithHoldingQuantity = scalesWithHoldingQuantity;
    return this;
  }

   /**
   * Get scalesWithHoldingQuantity
   * @return scalesWithHoldingQuantity
  **/
  @ApiModelProperty(value = "")
  public Boolean getScalesWithHoldingQuantity() {
    return scalesWithHoldingQuantity;
  }

  public void setScalesWithHoldingQuantity(Boolean scalesWithHoldingQuantity) {
    this.scalesWithHoldingQuantity = scalesWithHoldingQuantity;
  }

  public AggregationResult valueType(ValueTypeEnum valueType) {
    this.valueType = valueType;
    return this;
  }

   /**
   * Get valueType
   * @return valueType
  **/
  @ApiModelProperty(value = "")
  public ValueTypeEnum getValueType() {
    return valueType;
  }

  public void setValueType(ValueTypeEnum valueType) {
    this.valueType = valueType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AggregationResult aggregationResult = (AggregationResult) o;
    return Objects.equals(this.displayName, aggregationResult.displayName) &&
        Objects.equals(this.scalesWithHoldingQuantity, aggregationResult.scalesWithHoldingQuantity) &&
        Objects.equals(this.valueType, aggregationResult.valueType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, scalesWithHoldingQuantity, valueType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AggregationResult {\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    scalesWithHoldingQuantity: ").append(toIndentedString(scalesWithHoldingQuantity)).append("\n");
    sb.append("    valueType: ").append(toIndentedString(valueType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
